# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  role: Role
}

type PasswordState {
  isSet: Boolean!
}

input UserWhereUniqueInput {
  id: ID
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  role: RoleWhereInput
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  role: RoleRelateToOneForUpdateInput
}

input RoleRelateToOneForUpdateInput {
  create: RoleCreateInput
  connect: RoleWhereUniqueInput
  disconnect: Boolean
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  role: RoleRelateToOneForCreateInput
}

input RoleRelateToOneForCreateInput {
  create: RoleCreateInput
  connect: RoleWhereUniqueInput
}

type Role {
  id: ID!
  name: String
  canSeeOtherPeople: Boolean
  canEditOtherPeople: Boolean
  canManagePeople: Boolean
  canManageRoles: Boolean
  canAccessDashboard: Boolean
  canManageTools: Boolean
  canManageCategories: Boolean
  canManageFeatures: Boolean
  canManageAlternatives: Boolean
  canManageDeploymentOptions: Boolean
  canManageTechStacks: Boolean
  assignedTo(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  assignedToCount(where: UserWhereInput! = {}): Int
}

input RoleWhereUniqueInput {
  id: ID
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  id: IDFilter
  name: StringFilter
  canSeeOtherPeople: BooleanFilter
  canEditOtherPeople: BooleanFilter
  canManagePeople: BooleanFilter
  canManageRoles: BooleanFilter
  canAccessDashboard: BooleanFilter
  canManageTools: BooleanFilter
  canManageCategories: BooleanFilter
  canManageFeatures: BooleanFilter
  canManageAlternatives: BooleanFilter
  canManageDeploymentOptions: BooleanFilter
  canManageTechStacks: BooleanFilter
  assignedTo: UserManyRelationFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input RoleOrderByInput {
  id: OrderDirection
  name: OrderDirection
  canSeeOtherPeople: OrderDirection
  canEditOtherPeople: OrderDirection
  canManagePeople: OrderDirection
  canManageRoles: OrderDirection
  canAccessDashboard: OrderDirection
  canManageTools: OrderDirection
  canManageCategories: OrderDirection
  canManageFeatures: OrderDirection
  canManageAlternatives: OrderDirection
  canManageDeploymentOptions: OrderDirection
  canManageTechStacks: OrderDirection
}

input RoleUpdateInput {
  name: String
  canSeeOtherPeople: Boolean
  canEditOtherPeople: Boolean
  canManagePeople: Boolean
  canManageRoles: Boolean
  canAccessDashboard: Boolean
  canManageTools: Boolean
  canManageCategories: Boolean
  canManageFeatures: Boolean
  canManageAlternatives: Boolean
  canManageDeploymentOptions: Boolean
  canManageTechStacks: Boolean
  assignedTo: UserRelateToManyForUpdateInput
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input RoleUpdateArgs {
  where: RoleWhereUniqueInput!
  data: RoleUpdateInput!
}

input RoleCreateInput {
  name: String
  canSeeOtherPeople: Boolean
  canEditOtherPeople: Boolean
  canManagePeople: Boolean
  canManageRoles: Boolean
  canAccessDashboard: Boolean
  canManageTools: Boolean
  canManageCategories: Boolean
  canManageFeatures: Boolean
  canManageAlternatives: Boolean
  canManageDeploymentOptions: Boolean
  canManageTechStacks: Boolean
  assignedTo: UserRelateToManyForCreateInput
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

type Category {
  id: ID!
  name: String
  slug: String
  description: String
  icon: String
  color: String
  createdAt: DateTime
  tools(where: ToolWhereInput! = {}, orderBy: [ToolOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolWhereUniqueInput): [Tool!]
  toolsCount(where: ToolWhereInput! = {}): Int
  features(where: FeatureWhereInput! = {}, orderBy: [FeatureOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FeatureWhereUniqueInput): [Feature!]
  featuresCount(where: FeatureWhereInput! = {}): Int
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input CategoryWhereUniqueInput {
  id: ID
  slug: String
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
  id: IDFilter
  name: StringFilter
  slug: StringFilter
  description: StringFilter
  icon: StringFilter
  color: StringFilter
  createdAt: DateTimeNullableFilter
  tools: ToolManyRelationFilter
  features: FeatureManyRelationFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeNullableFilter
}

input ToolManyRelationFilter {
  every: ToolWhereInput
  some: ToolWhereInput
  none: ToolWhereInput
}

input FeatureManyRelationFilter {
  every: FeatureWhereInput
  some: FeatureWhereInput
  none: FeatureWhereInput
}

input CategoryOrderByInput {
  id: OrderDirection
  name: OrderDirection
  slug: OrderDirection
  description: OrderDirection
  icon: OrderDirection
  color: OrderDirection
  createdAt: OrderDirection
}

input CategoryUpdateInput {
  name: String
  slug: String
  description: String
  icon: String
  color: String
  createdAt: DateTime
  tools: ToolRelateToManyForUpdateInput
  features: FeatureRelateToManyForUpdateInput
}

input ToolRelateToManyForUpdateInput {
  disconnect: [ToolWhereUniqueInput!]
  set: [ToolWhereUniqueInput!]
  create: [ToolCreateInput!]
  connect: [ToolWhereUniqueInput!]
}

input FeatureRelateToManyForUpdateInput {
  disconnect: [FeatureWhereUniqueInput!]
  set: [FeatureWhereUniqueInput!]
  create: [FeatureCreateInput!]
  connect: [FeatureWhereUniqueInput!]
}

input CategoryUpdateArgs {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateInput!
}

input CategoryCreateInput {
  name: String
  slug: String
  description: String
  icon: String
  color: String
  createdAt: DateTime
  tools: ToolRelateToManyForCreateInput
  features: FeatureRelateToManyForCreateInput
}

input ToolRelateToManyForCreateInput {
  create: [ToolCreateInput!]
  connect: [ToolWhereUniqueInput!]
}

input FeatureRelateToManyForCreateInput {
  create: [FeatureCreateInput!]
  connect: [FeatureWhereUniqueInput!]
}

type Tool {
  id: ID!
  name: String
  slug: String
  description: String
  websiteUrl: String
  repositoryUrl: String
  logoUrl: String
  logoSvg: String
  isOpenSource: Boolean
  category: Category
  license: String
  githubStars: Int
  status: String
  pricingModel: String
  createdAt: DateTime
  updatedAt: DateTime
  features(where: ToolFeatureWhereInput! = {}, orderBy: [ToolFeatureOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolFeatureWhereUniqueInput): [ToolFeature!]
  featuresCount(where: ToolFeatureWhereInput! = {}): Int
  proprietaryAlternatives(where: AlternativeWhereInput! = {}, orderBy: [AlternativeOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AlternativeWhereUniqueInput): [Alternative!]
  proprietaryAlternativesCount(where: AlternativeWhereInput! = {}): Int
  openSourceAlternatives(where: AlternativeWhereInput! = {}, orderBy: [AlternativeOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AlternativeWhereUniqueInput): [Alternative!]
  openSourceAlternativesCount(where: AlternativeWhereInput! = {}): Int
  deploymentOptions(where: DeploymentOptionWhereInput! = {}, orderBy: [DeploymentOptionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DeploymentOptionWhereUniqueInput): [DeploymentOption!]
  deploymentOptionsCount(where: DeploymentOptionWhereInput! = {}): Int
  techStacks(where: ToolTechStackWhereInput! = {}, orderBy: [ToolTechStackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolTechStackWhereUniqueInput): [ToolTechStack!]
  techStacksCount(where: ToolTechStackWhereInput! = {}): Int
  resolvedLogo: JSON
}

input ToolWhereUniqueInput {
  id: ID
  slug: String
}

input ToolWhereInput {
  AND: [ToolWhereInput!]
  OR: [ToolWhereInput!]
  NOT: [ToolWhereInput!]
  id: IDFilter
  name: StringFilter
  slug: StringFilter
  description: StringFilter
  websiteUrl: StringFilter
  repositoryUrl: StringFilter
  logoUrl: StringFilter
  logoSvg: StringFilter
  isOpenSource: BooleanFilter
  category: CategoryWhereInput
  license: StringFilter
  githubStars: IntNullableFilter
  status: StringNullableFilter
  pricingModel: StringNullableFilter
  createdAt: DateTimeNullableFilter
  updatedAt: DateTimeNullableFilter
  features: ToolFeatureManyRelationFilter
  proprietaryAlternatives: AlternativeManyRelationFilter
  openSourceAlternatives: AlternativeManyRelationFilter
  deploymentOptions: DeploymentOptionManyRelationFilter
  techStacks: ToolTechStackManyRelationFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: StringNullableFilter
}

input ToolFeatureManyRelationFilter {
  every: ToolFeatureWhereInput
  some: ToolFeatureWhereInput
  none: ToolFeatureWhereInput
}

input AlternativeManyRelationFilter {
  every: AlternativeWhereInput
  some: AlternativeWhereInput
  none: AlternativeWhereInput
}

input DeploymentOptionManyRelationFilter {
  every: DeploymentOptionWhereInput
  some: DeploymentOptionWhereInput
  none: DeploymentOptionWhereInput
}

input ToolTechStackManyRelationFilter {
  every: ToolTechStackWhereInput
  some: ToolTechStackWhereInput
  none: ToolTechStackWhereInput
}

input ToolOrderByInput {
  id: OrderDirection
  name: OrderDirection
  slug: OrderDirection
  description: OrderDirection
  websiteUrl: OrderDirection
  repositoryUrl: OrderDirection
  logoUrl: OrderDirection
  logoSvg: OrderDirection
  isOpenSource: OrderDirection
  license: OrderDirection
  githubStars: OrderDirection
  status: OrderDirection
  pricingModel: OrderDirection
  createdAt: OrderDirection
  updatedAt: OrderDirection
}

input ToolUpdateInput {
  name: String
  slug: String
  description: String
  websiteUrl: String
  repositoryUrl: String
  logoUrl: String
  logoSvg: String
  isOpenSource: Boolean
  category: CategoryRelateToOneForUpdateInput
  license: String
  githubStars: Int
  status: String
  pricingModel: String
  createdAt: DateTime
  updatedAt: DateTime
  features: ToolFeatureRelateToManyForUpdateInput
  proprietaryAlternatives: AlternativeRelateToManyForUpdateInput
  openSourceAlternatives: AlternativeRelateToManyForUpdateInput
  deploymentOptions: DeploymentOptionRelateToManyForUpdateInput
  techStacks: ToolTechStackRelateToManyForUpdateInput
}

input CategoryRelateToOneForUpdateInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
  disconnect: Boolean
}

input ToolFeatureRelateToManyForUpdateInput {
  disconnect: [ToolFeatureWhereUniqueInput!]
  set: [ToolFeatureWhereUniqueInput!]
  create: [ToolFeatureCreateInput!]
  connect: [ToolFeatureWhereUniqueInput!]
}

input AlternativeRelateToManyForUpdateInput {
  disconnect: [AlternativeWhereUniqueInput!]
  set: [AlternativeWhereUniqueInput!]
  create: [AlternativeCreateInput!]
  connect: [AlternativeWhereUniqueInput!]
}

input DeploymentOptionRelateToManyForUpdateInput {
  disconnect: [DeploymentOptionWhereUniqueInput!]
  set: [DeploymentOptionWhereUniqueInput!]
  create: [DeploymentOptionCreateInput!]
  connect: [DeploymentOptionWhereUniqueInput!]
}

input ToolTechStackRelateToManyForUpdateInput {
  disconnect: [ToolTechStackWhereUniqueInput!]
  set: [ToolTechStackWhereUniqueInput!]
  create: [ToolTechStackCreateInput!]
  connect: [ToolTechStackWhereUniqueInput!]
}

input ToolUpdateArgs {
  where: ToolWhereUniqueInput!
  data: ToolUpdateInput!
}

input ToolCreateInput {
  name: String
  slug: String
  description: String
  websiteUrl: String
  repositoryUrl: String
  logoUrl: String
  logoSvg: String
  isOpenSource: Boolean
  category: CategoryRelateToOneForCreateInput
  license: String
  githubStars: Int
  status: String
  pricingModel: String
  createdAt: DateTime
  updatedAt: DateTime
  features: ToolFeatureRelateToManyForCreateInput
  proprietaryAlternatives: AlternativeRelateToManyForCreateInput
  openSourceAlternatives: AlternativeRelateToManyForCreateInput
  deploymentOptions: DeploymentOptionRelateToManyForCreateInput
  techStacks: ToolTechStackRelateToManyForCreateInput
}

input CategoryRelateToOneForCreateInput {
  create: CategoryCreateInput
  connect: CategoryWhereUniqueInput
}

input ToolFeatureRelateToManyForCreateInput {
  create: [ToolFeatureCreateInput!]
  connect: [ToolFeatureWhereUniqueInput!]
}

input AlternativeRelateToManyForCreateInput {
  create: [AlternativeCreateInput!]
  connect: [AlternativeWhereUniqueInput!]
}

input DeploymentOptionRelateToManyForCreateInput {
  create: [DeploymentOptionCreateInput!]
  connect: [DeploymentOptionWhereUniqueInput!]
}

input ToolTechStackRelateToManyForCreateInput {
  create: [ToolTechStackCreateInput!]
  connect: [ToolTechStackWhereUniqueInput!]
}

type Feature {
  id: ID!
  name: String
  slug: String
  description: String
  category: Category
  featureType: String
  createdAt: DateTime
  tools(where: ToolFeatureWhereInput! = {}, orderBy: [ToolFeatureOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolFeatureWhereUniqueInput): [ToolFeature!]
  toolsCount(where: ToolFeatureWhereInput! = {}): Int
}

input FeatureWhereUniqueInput {
  id: ID
  slug: String
}

input FeatureWhereInput {
  AND: [FeatureWhereInput!]
  OR: [FeatureWhereInput!]
  NOT: [FeatureWhereInput!]
  id: IDFilter
  name: StringFilter
  slug: StringFilter
  description: StringFilter
  category: CategoryWhereInput
  featureType: StringNullableFilter
  createdAt: DateTimeNullableFilter
  tools: ToolFeatureManyRelationFilter
}

input FeatureOrderByInput {
  id: OrderDirection
  name: OrderDirection
  slug: OrderDirection
  description: OrderDirection
  featureType: OrderDirection
  createdAt: OrderDirection
}

input FeatureUpdateInput {
  name: String
  slug: String
  description: String
  category: CategoryRelateToOneForUpdateInput
  featureType: String
  createdAt: DateTime
  tools: ToolFeatureRelateToManyForUpdateInput
}

input FeatureUpdateArgs {
  where: FeatureWhereUniqueInput!
  data: FeatureUpdateInput!
}

input FeatureCreateInput {
  name: String
  slug: String
  description: String
  category: CategoryRelateToOneForCreateInput
  featureType: String
  createdAt: DateTime
  tools: ToolFeatureRelateToManyForCreateInput
}

type ToolFeature {
  id: ID!
  tool: Tool
  feature: Feature
  implementationNotes: String
  qualityScore: Int
  verified: Boolean
  createdAt: DateTime
}

input ToolFeatureWhereUniqueInput {
  id: ID
}

input ToolFeatureWhereInput {
  AND: [ToolFeatureWhereInput!]
  OR: [ToolFeatureWhereInput!]
  NOT: [ToolFeatureWhereInput!]
  id: IDFilter
  tool: ToolWhereInput
  feature: FeatureWhereInput
  implementationNotes: StringFilter
  qualityScore: IntNullableFilter
  verified: BooleanFilter
  createdAt: DateTimeNullableFilter
}

input ToolFeatureOrderByInput {
  id: OrderDirection
  implementationNotes: OrderDirection
  qualityScore: OrderDirection
  verified: OrderDirection
  createdAt: OrderDirection
}

input ToolFeatureUpdateInput {
  tool: ToolRelateToOneForUpdateInput
  feature: FeatureRelateToOneForUpdateInput
  implementationNotes: String
  qualityScore: Int
  verified: Boolean
  createdAt: DateTime
}

input ToolRelateToOneForUpdateInput {
  create: ToolCreateInput
  connect: ToolWhereUniqueInput
  disconnect: Boolean
}

input FeatureRelateToOneForUpdateInput {
  create: FeatureCreateInput
  connect: FeatureWhereUniqueInput
  disconnect: Boolean
}

input ToolFeatureUpdateArgs {
  where: ToolFeatureWhereUniqueInput!
  data: ToolFeatureUpdateInput!
}

input ToolFeatureCreateInput {
  tool: ToolRelateToOneForCreateInput
  feature: FeatureRelateToOneForCreateInput
  implementationNotes: String
  qualityScore: Int
  verified: Boolean
  createdAt: DateTime
}

input ToolRelateToOneForCreateInput {
  create: ToolCreateInput
  connect: ToolWhereUniqueInput
}

input FeatureRelateToOneForCreateInput {
  create: FeatureCreateInput
  connect: FeatureWhereUniqueInput
}

type Alternative {
  id: ID!
  proprietaryTool: Tool
  openSourceTool: Tool
  similarityScore: Decimal
  matchType: String
  comparisonNotes: String
  createdAt: DateTime
}

scalar Decimal

input AlternativeWhereUniqueInput {
  id: ID
}

input AlternativeWhereInput {
  AND: [AlternativeWhereInput!]
  OR: [AlternativeWhereInput!]
  NOT: [AlternativeWhereInput!]
  id: IDFilter
  proprietaryTool: ToolWhereInput
  openSourceTool: ToolWhereInput
  similarityScore: DecimalNullableFilter
  matchType: StringNullableFilter
  comparisonNotes: StringFilter
  createdAt: DateTimeNullableFilter
}

input DecimalNullableFilter {
  equals: Decimal
  in: [Decimal!]
  notIn: [Decimal!]
  lt: Decimal
  lte: Decimal
  gt: Decimal
  gte: Decimal
  not: DecimalNullableFilter
}

input AlternativeOrderByInput {
  id: OrderDirection
  similarityScore: OrderDirection
  matchType: OrderDirection
  comparisonNotes: OrderDirection
  createdAt: OrderDirection
}

input AlternativeUpdateInput {
  proprietaryTool: ToolRelateToOneForUpdateInput
  openSourceTool: ToolRelateToOneForUpdateInput
  similarityScore: Decimal
  matchType: String
  comparisonNotes: String
  createdAt: DateTime
}

input AlternativeUpdateArgs {
  where: AlternativeWhereUniqueInput!
  data: AlternativeUpdateInput!
}

input AlternativeCreateInput {
  proprietaryTool: ToolRelateToOneForCreateInput
  openSourceTool: ToolRelateToOneForCreateInput
  similarityScore: Decimal
  matchType: String
  comparisonNotes: String
  createdAt: DateTime
}

type DeploymentOption {
  id: ID!
  tool: Tool
  platform: String
  deployUrl: String
  templateUrl: String
  difficulty: String
  estimatedTime: String
  requirements: JSON
  isVerified: Boolean
  createdAt: DateTime
}

input DeploymentOptionWhereUniqueInput {
  id: ID
}

input DeploymentOptionWhereInput {
  AND: [DeploymentOptionWhereInput!]
  OR: [DeploymentOptionWhereInput!]
  NOT: [DeploymentOptionWhereInput!]
  id: IDFilter
  tool: ToolWhereInput
  platform: StringFilter
  deployUrl: StringFilter
  templateUrl: StringFilter
  difficulty: StringNullableFilter
  estimatedTime: StringFilter
  isVerified: BooleanFilter
  createdAt: DateTimeNullableFilter
}

input DeploymentOptionOrderByInput {
  id: OrderDirection
  platform: OrderDirection
  deployUrl: OrderDirection
  templateUrl: OrderDirection
  difficulty: OrderDirection
  estimatedTime: OrderDirection
  isVerified: OrderDirection
  createdAt: OrderDirection
}

input DeploymentOptionUpdateInput {
  tool: ToolRelateToOneForUpdateInput
  platform: String
  deployUrl: String
  templateUrl: String
  difficulty: String
  estimatedTime: String
  requirements: JSON
  isVerified: Boolean
  createdAt: DateTime
}

input DeploymentOptionUpdateArgs {
  where: DeploymentOptionWhereUniqueInput!
  data: DeploymentOptionUpdateInput!
}

input DeploymentOptionCreateInput {
  tool: ToolRelateToOneForCreateInput
  platform: String
  deployUrl: String
  templateUrl: String
  difficulty: String
  estimatedTime: String
  requirements: JSON
  isVerified: Boolean
  createdAt: DateTime
}

type TechStack {
  id: ID!
  name: String
  type: String
  color: String
  iconUrl: String
  tools(where: ToolTechStackWhereInput! = {}, orderBy: [ToolTechStackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolTechStackWhereUniqueInput): [ToolTechStack!]
  toolsCount(where: ToolTechStackWhereInput! = {}): Int
}

input TechStackWhereUniqueInput {
  id: ID
}

input TechStackWhereInput {
  AND: [TechStackWhereInput!]
  OR: [TechStackWhereInput!]
  NOT: [TechStackWhereInput!]
  id: IDFilter
  name: StringFilter
  type: StringNullableFilter
  color: StringFilter
  iconUrl: StringFilter
  tools: ToolTechStackManyRelationFilter
}

input TechStackOrderByInput {
  id: OrderDirection
  name: OrderDirection
  type: OrderDirection
  color: OrderDirection
  iconUrl: OrderDirection
}

input TechStackUpdateInput {
  name: String
  type: String
  color: String
  iconUrl: String
  tools: ToolTechStackRelateToManyForUpdateInput
}

input TechStackUpdateArgs {
  where: TechStackWhereUniqueInput!
  data: TechStackUpdateInput!
}

input TechStackCreateInput {
  name: String
  type: String
  color: String
  iconUrl: String
  tools: ToolTechStackRelateToManyForCreateInput
}

type ToolTechStack {
  id: ID!
  tool: Tool
  techStack: TechStack
  isPrimary: Boolean
}

input ToolTechStackWhereUniqueInput {
  id: ID
}

input ToolTechStackWhereInput {
  AND: [ToolTechStackWhereInput!]
  OR: [ToolTechStackWhereInput!]
  NOT: [ToolTechStackWhereInput!]
  id: IDFilter
  tool: ToolWhereInput
  techStack: TechStackWhereInput
  isPrimary: BooleanFilter
}

input ToolTechStackOrderByInput {
  id: OrderDirection
  isPrimary: OrderDirection
}

input ToolTechStackUpdateInput {
  tool: ToolRelateToOneForUpdateInput
  techStack: TechStackRelateToOneForUpdateInput
  isPrimary: Boolean
}

input TechStackRelateToOneForUpdateInput {
  create: TechStackCreateInput
  connect: TechStackWhereUniqueInput
  disconnect: Boolean
}

input ToolTechStackUpdateArgs {
  where: ToolTechStackWhereUniqueInput!
  data: ToolTechStackUpdateInput!
}

input ToolTechStackCreateInput {
  tool: ToolRelateToOneForCreateInput
  techStack: TechStackRelateToOneForCreateInput
  isPrimary: Boolean
}

input TechStackRelateToOneForCreateInput {
  create: TechStackCreateInput
  connect: TechStackWhereUniqueInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createRole(data: RoleCreateInput!): Role
  createRoles(data: [RoleCreateInput!]!): [Role]
  updateRole(where: RoleWhereUniqueInput!, data: RoleUpdateInput!): Role
  updateRoles(data: [RoleUpdateArgs!]!): [Role]
  deleteRole(where: RoleWhereUniqueInput!): Role
  deleteRoles(where: [RoleWhereUniqueInput!]!): [Role]
  createCategory(data: CategoryCreateInput!): Category
  createCategories(data: [CategoryCreateInput!]!): [Category]
  updateCategory(where: CategoryWhereUniqueInput!, data: CategoryUpdateInput!): Category
  updateCategories(data: [CategoryUpdateArgs!]!): [Category]
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteCategories(where: [CategoryWhereUniqueInput!]!): [Category]
  createTool(data: ToolCreateInput!): Tool
  createTools(data: [ToolCreateInput!]!): [Tool]
  updateTool(where: ToolWhereUniqueInput!, data: ToolUpdateInput!): Tool
  updateTools(data: [ToolUpdateArgs!]!): [Tool]
  deleteTool(where: ToolWhereUniqueInput!): Tool
  deleteTools(where: [ToolWhereUniqueInput!]!): [Tool]
  createFeature(data: FeatureCreateInput!): Feature
  createFeatures(data: [FeatureCreateInput!]!): [Feature]
  updateFeature(where: FeatureWhereUniqueInput!, data: FeatureUpdateInput!): Feature
  updateFeatures(data: [FeatureUpdateArgs!]!): [Feature]
  deleteFeature(where: FeatureWhereUniqueInput!): Feature
  deleteFeatures(where: [FeatureWhereUniqueInput!]!): [Feature]
  createToolFeature(data: ToolFeatureCreateInput!): ToolFeature
  createToolFeatures(data: [ToolFeatureCreateInput!]!): [ToolFeature]
  updateToolFeature(where: ToolFeatureWhereUniqueInput!, data: ToolFeatureUpdateInput!): ToolFeature
  updateToolFeatures(data: [ToolFeatureUpdateArgs!]!): [ToolFeature]
  deleteToolFeature(where: ToolFeatureWhereUniqueInput!): ToolFeature
  deleteToolFeatures(where: [ToolFeatureWhereUniqueInput!]!): [ToolFeature]
  createAlternative(data: AlternativeCreateInput!): Alternative
  createAlternatives(data: [AlternativeCreateInput!]!): [Alternative]
  updateAlternative(where: AlternativeWhereUniqueInput!, data: AlternativeUpdateInput!): Alternative
  updateAlternatives(data: [AlternativeUpdateArgs!]!): [Alternative]
  deleteAlternative(where: AlternativeWhereUniqueInput!): Alternative
  deleteAlternatives(where: [AlternativeWhereUniqueInput!]!): [Alternative]
  createDeploymentOption(data: DeploymentOptionCreateInput!): DeploymentOption
  createDeploymentOptions(data: [DeploymentOptionCreateInput!]!): [DeploymentOption]
  updateDeploymentOption(where: DeploymentOptionWhereUniqueInput!, data: DeploymentOptionUpdateInput!): DeploymentOption
  updateDeploymentOptions(data: [DeploymentOptionUpdateArgs!]!): [DeploymentOption]
  deleteDeploymentOption(where: DeploymentOptionWhereUniqueInput!): DeploymentOption
  deleteDeploymentOptions(where: [DeploymentOptionWhereUniqueInput!]!): [DeploymentOption]
  createTechStack(data: TechStackCreateInput!): TechStack
  createTechStacks(data: [TechStackCreateInput!]!): [TechStack]
  updateTechStack(where: TechStackWhereUniqueInput!, data: TechStackUpdateInput!): TechStack
  updateTechStacks(data: [TechStackUpdateArgs!]!): [TechStack]
  deleteTechStack(where: TechStackWhereUniqueInput!): TechStack
  deleteTechStacks(where: [TechStackWhereUniqueInput!]!): [TechStack]
  createToolTechStack(data: ToolTechStackCreateInput!): ToolTechStack
  createToolTechStacks(data: [ToolTechStackCreateInput!]!): [ToolTechStack]
  updateToolTechStack(where: ToolTechStackWhereUniqueInput!, data: ToolTechStackUpdateInput!): ToolTechStack
  updateToolTechStacks(data: [ToolTechStackUpdateArgs!]!): [ToolTechStack]
  deleteToolTechStack(where: ToolTechStackWhereUniqueInput!): ToolTechStack
  deleteToolTechStacks(where: [ToolTechStackWhereUniqueInput!]!): [ToolTechStack]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  usersCount(where: UserWhereInput! = {}): Int
  role(where: RoleWhereUniqueInput!): Role
  roles(where: RoleWhereInput! = {}, orderBy: [RoleOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: RoleWhereUniqueInput): [Role!]
  rolesCount(where: RoleWhereInput! = {}): Int
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput! = {}, orderBy: [CategoryOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: CategoryWhereUniqueInput): [Category!]
  categoriesCount(where: CategoryWhereInput! = {}): Int
  tool(where: ToolWhereUniqueInput!): Tool
  tools(where: ToolWhereInput! = {}, orderBy: [ToolOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolWhereUniqueInput): [Tool!]
  toolsCount(where: ToolWhereInput! = {}): Int
  feature(where: FeatureWhereUniqueInput!): Feature
  features(where: FeatureWhereInput! = {}, orderBy: [FeatureOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: FeatureWhereUniqueInput): [Feature!]
  featuresCount(where: FeatureWhereInput! = {}): Int
  toolFeature(where: ToolFeatureWhereUniqueInput!): ToolFeature
  toolFeatures(where: ToolFeatureWhereInput! = {}, orderBy: [ToolFeatureOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolFeatureWhereUniqueInput): [ToolFeature!]
  toolFeaturesCount(where: ToolFeatureWhereInput! = {}): Int
  alternative(where: AlternativeWhereUniqueInput!): Alternative
  alternatives(where: AlternativeWhereInput! = {}, orderBy: [AlternativeOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AlternativeWhereUniqueInput): [Alternative!]
  alternativesCount(where: AlternativeWhereInput! = {}): Int
  deploymentOption(where: DeploymentOptionWhereUniqueInput!): DeploymentOption
  deploymentOptions(where: DeploymentOptionWhereInput! = {}, orderBy: [DeploymentOptionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: DeploymentOptionWhereUniqueInput): [DeploymentOption!]
  deploymentOptionsCount(where: DeploymentOptionWhereInput! = {}): Int
  techStack(where: TechStackWhereUniqueInput!): TechStack
  techStacks(where: TechStackWhereInput! = {}, orderBy: [TechStackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TechStackWhereUniqueInput): [TechStack!]
  techStacksCount(where: TechStackWhereInput! = {}): Int
  toolTechStack(where: ToolTechStackWhereUniqueInput!): ToolTechStack
  toolTechStacks(where: ToolTechStackWhereInput! = {}, orderBy: [ToolTechStackOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: ToolTechStackWhereUniqueInput): [ToolTechStack!]
  toolTechStacksCount(where: ToolTechStackWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
  redirectToInit: Boolean
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  graphql: KeystoneAdminUIGraphQL!
  initialColumns: [String!]!
  initialSearchFields: [String!]!
  initialSort: KeystoneAdminUISort
  isSingleton: Boolean!
  hideCreate: Boolean!
  hideDelete: Boolean!
  isHidden: Boolean!
  itemQueryName: String!
  listQueryName: String!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUIGraphQL {
  names: KeystoneAdminUIGraphQLNames!
}

type KeystoneAdminUIGraphQLNames {
  outputTypeName: String!
  whereInputName: String!
  whereUniqueInputName: String!
  createInputName: String!
  createMutationName: String!
  createManyMutationName: String!
  relateToOneForCreateInputName: String!
  relateToManyForCreateInputName: String!
  itemQueryName: String!
  listOrderName: String!
  listQueryCountName: String!
  listQueryName: String!
  updateInputName: String!
  updateMutationName: String!
  updateManyInputName: String!
  updateManyMutationName: String!
  relateToOneForUpdateInputName: String!
  relateToManyForUpdateInputName: String!
  deleteMutationName: String!
  deleteManyMutationName: String!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
